<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog 
    xmlns="http://www.liquibase.org/xml/ns/dbchangelog" 
    xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" 
    xmlns:pro="http://www.liquibase.org/xml/ns/pro" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext 
    http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd 
    http://www.liquibase.org/xml/ns/pro 
    http://www.liquibase.org/xml/ns/pro/liquibase-pro-4.1.xsd 
    http://www.liquibase.org/xml/ns/dbchangelog 
    http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.1.xsd">

    <changeSet author="Ben Hur" id="001_SP_INSIGHTS_BUILDER_1" runOnChange="true">
        <sql splitStatements="true" stripComments="false" endDelimiter="/" ><![CDATA[
            CREATE OR REPLACE PROCEDURE SP_INSIGHTS_BUILDER()
            RETURNS VARCHAR(16777216)
            LANGUAGE JAVASCRIPT
            EXECUTE AS CALLER
            AS
            $$
                var dataset = 'DETAIL_INSIGHTS';
                var proc_name = 'SP_INSIGHTS_BUILDER';
                var log_level = 'INFO';


                function executeQuery(query) {
                  var executeSql = snowflake.createStatement({ sqlText: query });
                  var result = executeSql.execute();
                  while (result.next()) {
                          sqlResult = result.getColumnValue(1);
					}
                  return {
                        sql_result: sqlResult,
                        query_id: executeSql.getQueryId()
					}
                }

                try {

                    var dynamic_table_script = `
						create dynamic table if not exists AUTH_NETWORK_INSIGHTS (
							MYDATE DATE,
							COMPANY_ID NUMBER(38,0),
							COMPANY_NAME VARCHAR(256)
						)
						warehouse = '${warehouse_name}'
						target_lag = '1 days'
						refresh_mode = auto
						initialize = on_create
						AS
						SELECT MYDATE,
							   COMPANY_ID,
							   COMPANY_NAME
						  FROM DETAIL_INSIGHTS;
                    `;

                    var dyanmic_table_result = executeQuery(dynamic_table_script);
                    var success_message = `dynamic table created with warehouse = ${warehouse_name}`

					return 0;
				}
				catch (err) {
					var error_message = `Failed to create dynamic table with error: ${err}`;

					return 1;
				}
            $$;
            ]]>
        </sql>

        <sql splitStatements="true" stripComments="false" ><![CDATA[
            CALL SP_INSIGHTS_BUILDER()
            ]]>
        </sql>

        <rollback>
            <sql splitStatements="true" stripComments="true" ><![CDATA[
                DROP PROCEDURE IF EXISTS SP_INSIGHTS_BUILDER();
            ]]>
            </sql>
        </rollback>
    </changeSet>


	<!-- <changeSet author="Ben Hur" id="002_INVOKE_PROCEDURE" runAlways="true">
        <sql splitStatements="true" stripComments="false" ><![CDATA[
            CALL SP_INSIGHTS_BUILDER()
            ]]>
        </sql>
		<rollback />
    </changeSet> -->
    
</databaseChangeLog>